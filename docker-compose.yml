version: '3.8'

services:
  bot:
    # Keep all your existing bot service configuration
    build: .
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-telegram_bot}
      - AUTH_SERVICE_URL=http://auth-service:5050
      - AUTH_REQUIRED=${AUTH_REQUIRED:-true}
      - DEV_MODE=${DEV_MODE:-false}
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN:-localhost:5050}
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      - knowledge-base
      - auth-service
    networks:
      - bot-network
    command: python run_bot.py

  # New service for knowledge base
  knowledge-base:
    build: ./knowledge-base
    volumes:
      - ./knowledge-base/data:/app/data
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - bot-network

  # Keep your existing redis and postgres services
  redis:
    image: redis:6.2-alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - bot-network

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-telegram_bot}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bot-network

  auth-service:
    build: ./auth-service
    ports:
      - "5050:5050"
    environment:
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - SECRET_KEY=${AUTH_SECRET_KEY}
      - MONGO_URI=mongodb://mongo:27017/
      - EXTERNAL_DOMAIN=${EXTERNAL_DOMAIN:-localhost:5050}
      - SERVER_NAME=${SERVER_NAME:-localhost:5050}
    restart: unless-stopped
    depends_on:
      - mongo
    networks:
      - bot-network
      
  mongo:
    image: mongo:4.4
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - bot-network

volumes:
  redis-data:
  postgres-data:
  mongo-data:

networks:
  bot-network:
    driver: bridge